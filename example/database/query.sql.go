// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.14.0
// source: query.sql

package database

import (
	"context"

	"github.com/CavernaTechnologies/pgext"
)

const getNums = `-- name: GetNums :many
SELECT id, num FROM uint_table
`

func (q *Queries) GetNums(ctx context.Context) ([]UintTable, error) {
	rows, err := q.db.Query(ctx, getNums)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []UintTable
	for rows.Next() {
		var i UintTable
		if err := rows.Scan(&i.ID, &i.Num); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const insertNum = `-- name: InsertNum :one
INSERT INTO uint_table (num) VALUES ($1) RETURNING id, num
`

func (q *Queries) InsertNum(ctx context.Context, num pgext.Puint) (UintTable, error) {
	row := q.db.QueryRow(ctx, insertNum, num)
	var i UintTable
	err := row.Scan(&i.ID, &i.Num)
	return i, err
}
